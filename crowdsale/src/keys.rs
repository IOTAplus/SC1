// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

// @formatter:off

#![allow(dead_code)]

use wasmlib::*;

use crate::*;

pub(crate) const IDX_PARAM_AMOUNT:          usize = 0;
pub(crate) const IDX_PARAM_FEEDBACK:        usize = 1;
pub(crate) const IDX_PARAM_NR:              usize = 2;
pub(crate) const IDX_PARAM_OWNER:           usize = 3;
pub(crate) const IDX_RESULT_AMOUNT:         usize = 4;
pub(crate) const IDX_RESULT_COUNT:          usize = 5;
pub(crate) const IDX_RESULT_ERROR:          usize = 6;
pub(crate) const IDX_RESULT_FEEDBACK:       usize = 7;
pub(crate) const IDX_RESULT_MAX_PURCHASE:   usize = 8;
pub(crate) const IDX_RESULT_OWNER:          usize = 9;
pub(crate) const IDX_RESULT_PURCHASER:      usize = 10;
pub(crate) const IDX_RESULT_TIMESTAMP:      usize = 11;
pub(crate) const IDX_RESULT_TOTAL_PURCHASE: usize = 12;
pub(crate) const IDX_STATE_LOG:             usize = 13;
pub(crate) const IDX_STATE_MAX_PURCHASE:    usize = 14;
pub(crate) const IDX_STATE_OWNER:           usize = 15;
pub(crate) const IDX_STATE_TOTAL_PURCHASE:  usize = 16;

pub const KEY_MAP_LEN: usize = 17;

pub const KEY_MAP: [&str; KEY_MAP_LEN] = [
    PARAM_AMOUNT,
    PARAM_FEEDBACK,
    PARAM_NR,
    PARAM_OWNER,
    RESULT_AMOUNT,
    RESULT_COUNT,
    RESULT_ERROR,
    RESULT_FEEDBACK,
    RESULT_MAX_PURCHASE,
    RESULT_OWNER,
    RESULT_PURCHASER,
    RESULT_TIMESTAMP,
    RESULT_TOTAL_PURCHASE,
    STATE_LOG,
    STATE_MAX_PURCHASE,
    STATE_OWNER,
    STATE_TOTAL_PURCHASE,
];

pub static mut IDX_MAP: [Key32; KEY_MAP_LEN] = [Key32(0); KEY_MAP_LEN];

pub fn idx_map(idx: usize) -> Key32 {
    unsafe {
        IDX_MAP[idx]
    }
}

// @formatter:on
