// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package crowdsale

 import "github.com/iotaledger/wasp/packages/vm/wasmlib"

type ArrayOfImmutablePurchaseIEXP struct {
	objID int32
}

func (a ArrayOfImmutablePurchaseIEXP) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutablePurchaseIEXP) GetPurchaseIEXP(index int32) ImmutablePurchaseIEXP {
	return ImmutablePurchaseIEXP{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type ImmutableCrowdSaleState struct {
	id int32
}

func (s ImmutableCrowdSaleState) Log() ArrayOfImmutablePurchaseIEXP {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateLog], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutablePurchaseIEXP{objID: arrID}
}

func (s ImmutableCrowdSaleState) MaxPurchase() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxStateMaxPurchase])
}

func (s ImmutableCrowdSaleState) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s ImmutableCrowdSaleState) TotalPurchase() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxStateTotalPurchase])
}

type ArrayOfMutablePurchaseIEXP struct {
	objID int32
}

func (a ArrayOfMutablePurchaseIEXP) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutablePurchaseIEXP) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutablePurchaseIEXP) GetPurchaseIEXP(index int32) MutablePurchaseIEXP {
	return MutablePurchaseIEXP{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type MutableCrowdSaleState struct {
	id int32
}

func (s MutableCrowdSaleState) Log() ArrayOfMutablePurchaseIEXP {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateLog], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutablePurchaseIEXP{objID: arrID}
}

func (s MutableCrowdSaleState) MaxPurchase() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxStateMaxPurchase])
}

func (s MutableCrowdSaleState) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s MutableCrowdSaleState) TotalPurchase() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxStateTotalPurchase])
}
